 bool* key = new bool[MNormal];
 
          for (int i = 0; i < MNormal; i++) {
            key[i] = false;
          }
 
          uint16* temp;
          temp = new uint16[MNormal*NNormal];
          int indexOfTemp = 0;
          int nonZeroCounter = 0;
          uint16* rowArray = new uint16[512];
          int rowArrayIndex = 0;
          int lastGoodIndex = 0;
 
          for(unsigned i=0; (i < MNormal); i++) {
            nonZeroCounter = 0;
            rowArrayIndex = 0;
            for(unsigned j=0; (j < NNormal); j++) {
              if (flattenedTimePoints[j][i] != 0){
                nonZeroCounter++;
              }
              rowArray[rowArrayIndex] = flattenedTimePoints[j][i];
              rowArrayIndex++;
            }
 
            if (nonZeroCounter != 0) {
              for (int k = 0; k < 512; k++) {
                temp[indexOfTemp] = rowArray[k];
                indexOfTemp++;
              }
              lastGoodIndex++;
              key[i] = true;
            }
 
          }
          cout << lastGoodIndex << endl;
          uint16* actualArray = new uint16[(lastGoodIndex)*512];
          cout << "test1" << endl;
          for (long i = 0; i < ((lastGoodIndex) * 512); i++) {
            actualArray[i] = temp[i];
          }

